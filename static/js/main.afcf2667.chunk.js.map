{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","images","frameSize","itemWidth","animationDuration","translate","nextSlide","prevSlide","className","style","width","transition","transform","map","img","i","key","src","alt","type","onClick","defaultProps","App","state","step","infinite","this","slidesCount","Math","ceil","max","length","setState","htmlFor","defaultValue","name","id","onChange","target","value","defaultChecked","checked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afcf2667.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nconst Carousel = ({ images, frameSize, itemWidth,\n  animationDuration, translate, nextSlide, prevSlide }) => (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${itemWidth * frameSize}px`,\n      }}\n    >\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          transition: `transform ${animationDuration}ms ease`,\n          transform: `translateX(${translate}px)`,\n        }}\n      >\n        {images.map((img, i) => (\n          <li key={img}>\n            <img\n              src={img}\n              alt={i}\n              style={{\n                width: `${itemWidth}px`,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttonBlock\">\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={prevSlide}\n        >\n          ⇦\n        </button>\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={nextSlide}\n        >\n          ⇨\n        </button>\n      </div>\n    </div>\n);\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  frameSize: PropTypes.number,\n  itemWidth: PropTypes.number,\n  animationDuration: PropTypes.number,\n  translate: PropTypes.number.isRequired,\n  nextSlide: PropTypes.func.isRequired,\n  prevSlide: PropTypes.func.isRequired,\n};\n\nCarousel.defaultProps = {\n  frameSize: 3,\n  itemWidth: 130,\n  animationDuration: 1000,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n    translate: 0,\n  };\n\n  render() {\n    const { images, step, frameSize, itemWidth,\n      animationDuration, infinite, translate } = this.state;\n\n    const width = itemWidth * step;\n    const slidesCount = Math.ceil(10 / step);\n    const max = width * slidesCount - width;\n\n    const nextSlide = () => {\n      if (translate > -max) {\n        this.setState(state => ({\n          translate: state.translate - width,\n        }));\n      } else if (translate === -max && infinite) {\n        this.setState({\n          translate: 0,\n        });\n      }\n    };\n\n    const prevSlide = () => {\n      if (translate === 0 && infinite) {\n        this.setState({\n          translate: -max,\n        });\n      } else if (translate < 0) {\n        this.setState(state => ({\n          translate: state.translate + width,\n        }));\n      }\n    };\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__header\">\n          {/* eslint-disable-next-line */}\n          Carousel with {images.length} images\n        </h1>\n\n        <Carousel\n          images={images}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          translate={translate}\n          nextSlide={nextSlide}\n          prevSlide={prevSlide}\n        />\n        <div className=\"App__inputFields\">\n          <label htmlFor=\"step\">\n            Number of images scrolled per click\n          </label>\n          <input\n            type=\"number\"\n            defaultValue={step}\n            name=\"step\"\n            id=\"step\"\n            onChange={({ target }) => {\n              this.setState({\n                step: target.value,\n              });\n            }}\n          />\n          <label htmlFor=\"frameSize\">\n            Number of images displayed at the same time\n          </label>\n          <input\n            type=\"number\"\n            defaultValue={frameSize}\n            name=\"frameSize\"\n            id=\"frameSize\"\n            onChange={({ target }) => {\n              this.setState({\n                frameSize: target.value,\n              });\n            }}\n          />\n          <label htmlFor=\"itemWidth\">\n            Width of the one picture\n          </label>\n          <input\n            type=\"number\"\n            defaultValue={itemWidth}\n            name=\"itemWidth\"\n            id=\"itemWidth\"\n            onChange={({ target }) => {\n              this.setState({\n                itemWidth: target.value,\n              });\n            }}\n          />\n          <label htmlFor=\"animationDuration\">\n            Time in ms to show the new portion of images\n          </label>\n          <input\n            type=\"number\"\n            defaultValue={animationDuration}\n            name=\"animationDuration\"\n            id=\"animationDuration\"\n            onChange={({ target }) => {\n              this.setState({\n                animationDuration: target.value,\n              });\n            }}\n          />\n          <label htmlFor=\"infinite\">\n            To do the carousel cyclic\n          </label>\n          <input\n            type=\"checkbox\"\n            name=\"infinite\"\n            id=\"infinite\"\n            defaultChecked={infinite && true}\n            onChange={({ target }) => {\n              this.setState({\n                infinite: target.checked,\n              });\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}